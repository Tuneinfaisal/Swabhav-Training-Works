package com.monocept;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.Arrays;
import java.util.regex.Pattern;

public class ArrayStreamTest {
	
	public static void main(String[] args)
	{
		caseStudy1();
		caseStudy2();
	}
	
	public static void caseStudy1()
	{
		String[] names = new String[]{"Faisal","Ankit","Asif","Nongamba"};
		Arrays.stream(names).filter(n->n.contains("A"))
				.sorted()
				.forEach(System.out::println);
		Arrays.stream(names).filter(n->n.contains("A"))
				.sorted()
				.forEach(n->System.out.println(n.toUpperCase()));
	}
	
	public static void caseStudy2()
	{
		String[] manyMarks = {"10","20","30"};
		int total = Arrays.stream(manyMarks)
				.filter(ArrayStreamTest::isNumber)
				.mapToInt(x->Integer.parseInt(x))
				.filter(x->x>25)
				.sum();
		System.out.println(total);
	}
	private static boolean isNumber(String s)
	{
		return Pattern.matches("\\d+",s);
	}
	public static void caseStudy3() throws IOException
	{
		Files.lines(Paths.get("names.txt"))
				.filter(n-> Pattern.matches("[a-zA-Z]+", n))
				.distinct()
				.sorted()
				.limit(2)
				.forEach(System.out::println);
	}

}
